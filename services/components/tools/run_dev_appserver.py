#!/usr/bin/env python
# Copyright 2013 The Swarming Authors. All rights reserved.
# Use of this source code is governed by the Apache v2.0 license that can be
# found in the LICENSE file.

"""Runs app engine app locally via dev_appserver.py.

This script is mostly useful for apps that are composed of multiple modules.
The script will discover and launch them together with the default module.
"""

import optparse
import os
import signal
import subprocess
import sys

ROOT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, ROOT_DIR)
sys.path.insert(0, os.path.join(ROOT_DIR, 'third_party'))

from support import gae_sdk_utils


def main(args, app_dir=None):
  parser = optparse.OptionParser(
      description=sys.modules[__name__].__doc__,
      usage='%%prog [options] %s[extra arguments for dev_appserver.py]' % (
        '<app dir> ' if not app_dir else ''))
  parser.disable_interspersed_args()
  parser.add_option(
      '-s', '--sdk-path',
      help='Path to AppEngine SDK. Will try to find by itself.')
  parser.add_option(
      '-o', '--open', action='store_true',
      help='Listen to all interfaces (less secure)')
  parser.add_option(
      '-v', '--verbose', action='store_true',
      help='Display debug level log messages generated by the app')
  options, args = parser.parse_args(args)

  # If |app_dir| is not provided, it must be passed via command line. Happens
  # when run_dev_appserver.py is directly executed as a CLI tool.
  if not app_dir:
    if len(args) < 1:
      parser.error('Expecting a path to a GAE application directory')
    app_dir, args = args[0], args[1:]

  # Ensure app_dir points to a directory with app.yaml.
  app_dir = os.path.abspath(app_dir)
  if not gae_sdk_utils.is_application_directory(app_dir):
    parser.error('Not a GAE application directory: %s' % app_dir)

  options.sdk_path = options.sdk_path or gae_sdk_utils.find_gae_sdk()
  if not options.sdk_path:
    parser.error('Failed to find the AppEngine SDK. Pass --sdk-path argument.')

  cmd = [
    sys.executable,
    os.path.join(options.sdk_path, 'dev_appserver.py'),
    '--skip_sdk_update_check=yes',
    '--require_indexes=yes',
  ] + gae_sdk_utils.find_module_yamls(app_dir) + args
  if options.open:
    cmd.extend(('--host', '0.0.0.0', '--admin_host', '0.0.0.0'))
  if options.verbose:
    cmd.extend(('--log_level', 'debug'))

  # Let dev_appserver.py handle Ctrl+C interrupts.
  signal.signal(signal.SIGINT, signal.SIG_IGN)
  return subprocess.call(cmd, cwd=app_dir)


if __name__ == '__main__':
  sys.exit(main(sys.argv[1:]))
