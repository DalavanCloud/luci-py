// Copyright 2016 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// This describes the interface a Swarming bot can use to contact a Swarming
// server over a gRPC proxy. It essentially duplicates the "native" Swarming
// REST API (or, at least, it will in the near future).
//
// This proto is *not yet stable* and *will* change over time in non-backward-
// compatible ways.

syntax = "proto3";

package luci.swarming.bot;
import "google/protobuf/struct.proto";

service BotService {
  rpc Handshake(HandshakeRequest) returns (HandshakeResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Poll(PollRequest) returns (PollResponse);
}

message Dimension {
  string name = 1;
  repeated string values = 2;
}

message State {
  repeated string audio = 1;
  string bot_group_cfg_version = 2;
  double cost_usd_hour = 3;
  string cpu = 4;
  string cwd = 5;
  google.protobuf.Struct disks = 6;
  repeated string gpu = 7;
  string hostname = 8;
  string ip = 9;
  string locale = 10;
  int32 nb_files_in_temp = 11;
  int32 pid = 12;
  int32 ram = 13;
  int32 running_time = 14;
  int32 sleep_streak = 15;
  int32 started_ts = 16;
  google.protobuf.Struct temp = 17;
  int32 uptime = 18;
  string user = 19;
}

message Attributes {
  repeated Dimension dimensions = 1;
  State state = 2;
  string version = 3;
}

message HandshakeRequest {
  Attributes attributes = 1;
}

message HandshakeResponse {
  string server_version = 1;
  string bot_version = 2;
  string bot_group_cfg_version = 3;
  message BotGroupCfg {
    repeated Dimension dimensions = 1;
  }
  BotGroupCfg bot_group_cfg = 4;
}

message UpdateRequest {
  string bot_version = 1;
}

message UpdateResponse {
  bytes bot_code = 1;
}

message PollRequest {
  Attributes attributes = 1;
}

message Manifest {
  string task_id = 1;

  // Not the "Dimensions" message - these are the *actual*
  // dimensions, not the *allowed* dimensions, so the values
  // are scalars, not lists
  map<string,string> dimensions = 2;

  message Isolated {
    string input = 1; // sha1 digest
    string namespace = 2;
  }
  Isolated isolated = 3;
  map<string, string> env = 4;
  int32 grace_period = 5;
  int32 hard_timeout = 6;
  int32 io_timeout = 7;
  string bot_id = 8;
}

message PollResponse {
  enum ResponseType {
    UPDATE = 0;
    SLEEP = 1;
    TERMINATE = 2;
    RUN = 3;
    RESTART = 4;
  }

  ResponseType cmd = 1;
  oneof action {
    double sleep_time = 2;
    Manifest manifest = 3;
    string terminate_taskid = 4;
    string restart_message = 5;
    string version = 6;
  }
}
